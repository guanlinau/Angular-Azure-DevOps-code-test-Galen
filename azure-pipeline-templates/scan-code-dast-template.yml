# This template is for Dynamic Application Test to scan code vulnerabilities during runtime
---
parameters:
    - name: vmImage
      type: string
      default: "ubuntu-latest"
    - name: repository
      type: string
      default: ""
    - name: containerRegistry
      type: string
      default: ""
    - name: tag
      type: string
      default: ""
    - name: docker_port
      default: 80
    - name: container_name
      default: ""
stages:
    - stage: DAST
      displayName: DAST
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      dependsOn: Build
      jobs:
          - job: DAST
            displayName: Dynamic Application Security Test
            pool:
                vmImage: ${{parameters.vmImage}}
            steps:
                - checkout: self

                - task: Docker@2
                  inputs:
                      containerRegistry: ${{parameters.containerRegistry}}
                      command: "login"
                  displayName: Login to ACR

                - script: |
                      docker run -d -p 80:${{parameters.docker_port}} --name ${{parameters.container_name}} ${{parameters.containerRegistry}}/${{parameters.repository}}:${{parameters.tag}}
                  displayName: Run docker container for ${{parameters.container_name}}

                - bash: |
                      chmod -R 764  ./
                      docker run --rm -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-full-scan.py -t http://$(ip -f inet -o addr show docker0 | awk '{print $4}' | cut -d '/' -f 1):80 -x xml_report.xml
                      true
                  displayName: "Owasp Container Scan"

                - powershell: |
                      $XslPath = "$(System.DefaultWorkingDirectory)/xml_to_nunit.xslt"
                      $XmlInputPath = "xml_report.xml"
                      $XmlOutputPath = "converted_report.xml"
                      $XslTransform = New-Object System.Xml.Xsl.XslCompiledTransform
                      $XslTransform.Load($XslPath)
                      $XslTransform.Transform($XmlInputPath, $XmlOutputPath)
                  displayName: "Owasp Generate Nunit type file"
                - task: PublishTestResults@2
                  displayName: "Publish Test Results"
                  inputs:
                      testRunTitle: DAST_code_scan_report
                      testResultsFormat: "NUnit"
                      testResultsFiles: "converted_report.xml"
