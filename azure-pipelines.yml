

# trigger:
# - master
trigger: none
# trigger:
# - azure-pipelines-docker
resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '5e1f01e6-4395-4c31-8174-dd4474fc2ca1'
  imageRepository: 'acrreponame'
  containerRegistry: 'angularwebacr.azurecr.io'
  uatNamespace: 'angular-web-uat'
  proNamespace: 'angular-web-pro'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  uatEnvironment: 'uat'
  proEnvironment: 'pro'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)/manifests'
        artifact: 'manifests'
        publishLocation: 'pipeline'

- stage: Deploy to UAT 
  displayName: Deploy to UAT stage
  dependsOn: Build
  variables:
    imagePullSecret: 'image_key'
  jobs:
  - deployment: Deploy Deploy to UAT envrionment
    displayName: Deploy to UAT envrionment
    pool:
      vmImage: $(vmImageName)
    environment: $(uatEnvironment)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)/manifests'

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              namespace: $(uatNamespace)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(uatNamespace)
              manifests: |
                $(System.ArtifactsDirectory)/manifests/kubernetes.yaml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
