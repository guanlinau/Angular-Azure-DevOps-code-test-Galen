
trigger: 
 - azure-pipelines

pool:
  vmImage: ubuntu-latest

stages:
  - stage: "Preparetion_and_test"
    displayName: "Preparetion"
    jobs:
      - job: "Preparetion_and_test"
        displayName: "Preparetion and test"
        steps:

        - task: NodeTool@0
          inputs:
            versionSource: 'spec'
            versionSpec: '14.x'
          displayName: 'Install Node.js'
        - task: Npm@1
          inputs:
            command: 'install'
          displayName: "Install dependencies"
        - task: Npm@1
          inputs:
            command: 'custom'
            customCommand: 'run build'
          displayName: "Run build for compiling"

        - task: Npm@1
          inputs:
            command: 'custom'
            customCommand: 'run test -- --watch=false --code-coverage'
          displayName: 'Run unit testing'
        
        - script: |
            npm install -g @angular/cli
            ng test --browsers=ChromeHeadless --watch=false     
          displayName: 'run unit tesing and access the code coverage'
        
        - script: |
            npm install -g @angular/cli
            ng test --code-coverage     
          displayName: 'run unit tesing and access the code coverage'
        
        - task: PublishCodeCoverageResults@1
          displayName: 'Publish code coverage Angular results'
          condition: succeededOrFailed()
          inputs:
             codeCoverageTool: 'Cobertura' 
             summaryFileLocation: 'coverage/angular11-testing-examples/cobertura-coverage.xml'
             reportDirectory: 'coverage/angular11-testing-examples/'
             failIfCoverageEmpty: false

        - task: PublishTestResults@2
          displayName: 'Publish Angular test results'
          condition: succeededOrFailed()
          inputs:
             searchFolder: $(System.DefaultWorkingDirectory)
             testRunTitle: Angular
             testResultsFormat: JUnit
             testResultsFiles: "**/TESTS-*.xml"

        - task: Npm@1
          inputs:
            command: 'custom'
            customCommand: 'run lint'
          displayName: 'Run Linting and code quality analysis'
          condition: succeededOrFailed()
        
        
        
  - stage: "Build_and_push"
    displayName: "Build and push docker image"
    jobs:
      - job: "Build_and_push"
        displayName: "Build and push docker image"
        steps:
        - task: NodeTool@0
          inputs:
            versionSource: 'spec'
            versionSpec: '14.x'
          displayName: 'Install Node.js'

        
        
